{"version":3,"file":"static/js/882.0b8058a0.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.js","components/cardSet/cardSet.Style.jsx","components/FlexBox/FlexBox.js","components/cardSet/cardSet.jsx","pages/movies/Movie.styled.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { PaginationItem } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nexport const SitePagination = ({ pages, handleChange, currentPage }) => {\n  return (\n    <Stack spacing={2}>\n      <Pagination\n        renderItem={i => {\n          return (\n            <Link to={`/movies/pages/${i.page}`}>\n              <PaginationItem {...i} />\n            </Link>\n          );\n        }}\n        count={pages}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        page={currentPage}\n        onChange={(e, v) => {\n          handleChange(v);\n        }}\n      />\n    </Stack>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FilmCard = styled.li`\n  background-color: #fff;\n  @media (min-width: 768px) {\n    display: flex;\n    width: 1200px;\n    height: 220px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px;\n  }\n  &:hover {\n    box-shadow: 0 0px 3px rgba(0, 0, 0, 0.19), 0 6px 6px;\n  }\n`;\nexport const FilmImg = styled.img`\n  height: 220px;\n`;\nexport const FilmDataBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 15px;\n  width: 100%;\n  font-family: 'Oswald';\n  font-size: 18px;\n`;\nexport const OverviewText = styled.p`\n  height: 160px;\n  margin-top: 5px;\n`;\nexport const StyledLink = styled(Link)`\n  color: #222;\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\nimport React from 'react';\n\nexport const FlexBox = ({ children }) => {\n  return <FlexBoxStyled>{children}</FlexBoxStyled>;\n};\n\nconst FlexBoxStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { Rating } from 'react-simple-star-rating';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  FilmCard,\n  FilmDataBox,\n  FilmImg,\n  OverviewText,\n  StyledLink,\n} from './cardSet.Style';\nimport { FlexBox } from 'components/FlexBox/FlexBox';\nexport const CardSet = ({ film }) => {\n  const {\n    poster_path,\n    original_title,\n    title,\n    overview,\n    release_date,\n    vote_average,\n    id,\n  } = film;\n\n  const location = useLocation();\n\n  return (\n    <FilmCard>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <FilmImg\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={original_title}\n        />\n      </Link>\n      <FilmDataBox>\n        <FlexBox>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            {title ? <h3>{title}</h3> : <h3>{original_title}</h3>}\n          </StyledLink>\n          <span>{release_date}</span>\n        </FlexBox>\n        <OverviewText>{overview}</OverviewText>\n        <Rating\n          initialValue={Math.round(vote_average)}\n          iconsCount={10}\n          readonly={true}\n          size={20}\n        />\n      </FilmDataBox>\n    </FilmCard>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  @media screen and (min-width: 1400px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    max-width: 1450px;\n  }\n`;\nexport const Box = styled.div`\n  margin-top: 107px;\n  @media screen and (min-width: 1400px) {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    width: 1400px;\n    height: 100%;\n    margin: 107px auto 0;\n    padding: 20px;\n  }\n`;\nexport const SearchForm = styled.form`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  background-color: #00000059;\n`;\nexport const Input = styled.input`\n  width: 400px;\n  height: 40px;\n  border: none;\n  border-bottom: 2px solid #00000059;\n  border-top: 2px solid #00000059;\n`;\nexport const SearchButton = styled.button`\n  border: none;\n  border-bottom: 2px solid #00000059;\n  border-top: 2px solid #00000059;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport 'react-notifications/lib/notifications.css';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\nimport { SitePagination } from 'components/Pagination/Pagination';\nimport { IoSearch } from 'react-icons/io5';\nimport { CardSet } from 'components/cardSet/cardSet';\nimport { fetchPopularMovie, queryFetch } from 'service/fetch';\nimport {\n  Box,\n  Input,\n  List,\n  SearchForm,\n  SearchButton,\n} from 'pages/movies/Movie.styled';\nimport { useParams } from 'react-router-dom';\n\n// import { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const params = useParams();\n  const [currentPage, setCurrentPage] = useState();\n  const [pagesCount, setPagesCount] = useState(1);\n  const [query, setQuery] = useState('');\n  const [queryFilms, setQueryFilms] = useState([]);\n  // const [searchParams, setSearchParams] = useSearchParams();\n  console.log(params);\n  useEffect(() => {\n    fetchPopularMovie(currentPage)\n      .then(response => {\n        return (\n          setPagesCount(response.data.total_pages),\n          setQueryFilms(response.data.results)\n        );\n      })\n      .catch(error => {\n        NotificationManager.error(error.message, '', 5000);\n        console.log(error);\n      });\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    queryFetch(query, currentPage)\n      .then(response => {\n        return (\n          setPagesCount(response.data.total_pages),\n          setQueryFilms(response.data.results)\n        );\n      })\n      .catch(error => {\n        console.log(error);\n        NotificationManager.error(error.message, '', 5000);\n      });\n  }, [currentPage, query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCurrentPage(1);\n    const formQuery = e.currentTarget.input.value.trim();\n    setQuery(formQuery);\n  };\n\n  const changePage = v => {\n    // setCurrentPage(v);\n    // fetchPopularMovie(v)\n    //   .then(response => {\n    //     return (\n    //       setPagesCount(response.data.total_pages),\n    //       setQueryFilms(response.data.results)\n    //     );\n    //   })\n    //   .catch(error => {\n    //     NotificationManager.error(error.message, '', 5000);\n    //     console.log(error);\n    //   });\n  };\n\n  return (\n    <>\n      <Box>\n        <SearchForm onSubmit={handleSubmit}>\n          <Input name=\"input\" type=\"text\" placeholder=\"Search film\" />\n          <SearchButton type=\"submit\">\n            <IoSearch />\n          </SearchButton>\n        </SearchForm>\n        {queryFilms.length !== 0 && (\n          <List>\n            {queryFilms.map(film => {\n              return <CardSet film={film} key={film.id}></CardSet>;\n            })}\n          </List>\n        )}\n        <NotificationContainer />\n        <SitePagination\n          pages={pagesCount}\n          handleChange={changePage}\n          currentPage={currentPage}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["SitePagination","pages","handleChange","currentPage","Stack","spacing","Pagination","renderItem","i","to","page","PaginationItem","count","variant","shape","onChange","e","v","FilmCard","styled","FilmImg","FilmDataBox","OverviewText","StyledLink","Link","FlexBox","children","FlexBoxStyled","CardSet","film","poster_path","original_title","title","overview","release_date","vote_average","id","location","useLocation","state","from","src","alt","initialValue","Math","round","iconsCount","readonly","size","List","Box","SearchForm","Input","SearchButton","params","useParams","useState","setCurrentPage","pagesCount","setPagesCount","query","setQuery","queryFilms","setQueryFilms","console","log","useEffect","fetchPopularMovie","then","response","data","total_pages","results","catch","error","NotificationManager","message","queryFetch","onSubmit","preventDefault","formQuery","currentTarget","input","value","trim","name","type","placeholder","length","map"],"sourceRoot":""}