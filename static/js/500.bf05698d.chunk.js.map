{"version":3,"file":"static/js/500.bf05698d.chunk.js","mappings":"qPAEaA,EAAYC,EAAAA,GAAAA,IAAH,6IAQTC,EAAOD,EAAAA,GAAAA,GAAH,8cAsBJE,EAAMF,EAAAA,GAAAA,IAAH,mI,uIC9BHG,EAAWH,EAAAA,GAAAA,GAAH,oFAMRI,EAAUJ,EAAAA,GAAAA,IAAH,0C,SCPPK,EAAU,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,eAA2B,EAAXC,KACrD,OACE,SAACL,EAAD,WACE,SAACC,EAAD,CACEK,IAAG,0CAAqCH,GACxCI,IAAKH,KAKZ,E,oBCwCD,EA9Ce,WACb,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,MACAC,EAAAA,EAAAA,YAAU,WACM,KAAVJ,IAGJK,EAAAA,EAAAA,IAAWL,GACRM,MAAK,SAAAC,GAAQ,OAAIJ,EAAcI,EAASC,KAAKC,QAAhC,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACX,IAEJ,IAKMc,GAAWC,EAAAA,EAAAA,MACjB,OACE,iCACE,kBAAMC,SARW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAYF,EAAEG,cAAcC,MAAMC,MAAMC,OAC9CtB,EAASkB,EACV,EAIG,WACE,kBAAOvB,KAAK,QAAQ4B,KAAK,OAAOC,YAAY,iBAC5C,mBAAQD,KAAK,SAAb,uBAGqB,IAAtBtB,EAAWwB,QACV,SAAC,KAAD,UACGxB,EAAWyB,KAAI,SAAAC,GACd,OACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMlB,GAFjB,SAKGrB,EAAQmC,IAFJA,EAAKE,GAKf,OAGH,iDAIP,C,oIC/CKG,EAAMC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,cAGjB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAAA,IAAA,qCAAwCJ,EAAxC,kBADR,0GAIA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,iFACQqC,IAAAA,IAAA,+BACaJ,EADb,iCACyCjC,EADzC,YADR,0GANPsC,IAAAA,SAAAA,QAAyB,+B","sources":["pages/home/Home.styled.jsx","components/cardSet/cardSet.Style.jsx","components/cardSet/cardSet.jsx","pages/movies/Movies.jsx","service/fetch.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n`;\n\nexport const List = styled.ul`\n  @media screen and (min-width: 1400px) {\n    position: absolute;\n    bottom: 10px;\n    display: flex;\n    gap: 10px;\n    margin-left: 100px;\n    max-width: 1450px;\n    overflow-x: scroll;\n    scroll-snap-type: x mandatory;\n\n    /* hidden scroll-bar */\n    -ms-overflow-x-style: none;\n    scrollbar-width: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n    & a {\n      scroll-snap-align: start;\n    }\n  }\n`;\nexport const Box = styled.div`\n  @media screen and (min-width: 1400px) {\n    width: 1400px;\n    height: 100%;\n    margin: 0 auto;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FilmCard = styled.li`\n  position: relative;\n  &:hover {\n    bottom: 10px;\n  }\n`;\nexport const FilmImg = styled.img`\n  height: 220px;\n`;\n","import { FilmCard, FilmImg } from './cardSet.Style';\nexport const CardSet = ({ poster_path, original_title, name }) => {\n  return (\n    <FilmCard>\n      <FilmImg\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n        alt={original_title}\n      />\n      {/* {original_title ? <p>{original_title}</p> : <p>{name}</p>} */}\n    </FilmCard>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CardSet } from 'components/cardSet/cardSet';\nimport { queryFetch } from 'service/fetch';\nimport { List } from 'pages/home/Home.styled';\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [queryFilms, setQueryFilms] = useState([]);\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    queryFetch(query)\n      .then(response => setQueryFilms(response.data.results))\n      .catch(error => console.log(error));\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formQuery = e.currentTarget.input.value.trim();\n    setQuery(formQuery);\n  };\n  const location = useLocation();\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name=\"input\" type=\"text\" placeholder=\"Search film\" />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {queryFilms.length !== 0 ? (\n        <List>\n          {queryFilms.map(film => {\n            return (\n              <Link\n                to={`/movies/${film.id}`}\n                state={{ from: location }}\n                key={film.id}\n              >\n                {CardSet(film)}\n              </Link>\n            );\n          })}\n        </List>\n      ) : (\n        <p>No items for search</p>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport Axios from 'axios';\nconst KEY = process.env.REACT_APP_KEY;\naxios.defaults.baseURL = ' https://api.themoviedb.org/3';\n\nexport async function fetchTrend() {\n  return await Axios.get(`trending/movie/day?api_key=${KEY}&language=ukr`);\n}\n\nexport async function queryFetch(query) {\n  return await Axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1`\n  );\n}\n\nexport async function fetchById(id) {\n  return await Axios.get(`movie/${id}?api_key=${KEY}&language=ukr-UKR`);\n}\n\nexport async function fetchCast(id) {\n  return await Axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`);\n}\n\nexport async function fetchReview(id) {\n  return await Axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Container","styled","List","Box","FilmCard","FilmImg","CardSet","poster_path","original_title","name","src","alt","useState","query","setQuery","queryFilms","setQueryFilms","useEffect","queryFetch","then","response","data","results","catch","error","console","log","location","useLocation","onSubmit","e","preventDefault","formQuery","currentTarget","input","value","trim","type","placeholder","length","map","film","to","id","state","from","KEY","process","REACT_APP_KEY","fetchTrend","Axios","axios"],"sourceRoot":""}