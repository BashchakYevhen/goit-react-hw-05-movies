{"version":3,"file":"static/js/171.380135a9.chunk.js","mappings":"gPAEaA,EAAWC,EAAAA,GAAAA,IAAH,qJCARC,EAAQD,EAAAA,GAAAA,IAAH,4QAYLE,EAASF,EAAAA,GAAAA,OAAH,yG,SCVNG,EAAe,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAEvD,OADAC,QAAQC,IAAIH,IAEV,SAACN,EAAD,WACE,UAACE,EAAD,YACE,SAACC,EAAD,CACEO,QAAS,WACPL,IACAE,EAAe,GAChB,EAJH,gBAQA,mBACEI,MAAM,IACNC,MAAM,MACNC,OAAO,MACPC,IAAG,wCAAmCR,EAAY,GAAGS,WAK9D,E,8BCvBYC,EAAMf,EAAAA,GAAAA,IAAH,4LAUHgB,EAAYhB,EAAAA,GAAAA,GAAH,gKAQTiB,EAAQjB,EAAAA,GAAAA,GAAH,gDAoBLkB,IAjBalB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,4UAiBHA,EAAAA,GAAAA,EAAH,iDAGJE,EAASF,EAAAA,GAAAA,OAAH,4RCiBnB,EAvDsB,SAAC,GAAmB,IAAjBoB,EAAgB,EAAhBA,UACvB,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMnB,EAAc,WAClBmB,GAAaD,EACd,EAED,GAAsCD,EAAAA,EAAAA,UAAS,IAA/C,eAAOhB,EAAP,KAAoBC,EAApB,KAYA,OACE,8BACGc,GACC,UAACL,EAAD,YACE,SAACC,EAAD,UAAYI,EAAUV,SACtB,SAACO,EAAD,wBACA,SAACC,EAAD,UAAOE,EAAUI,YACjB,SAACP,EAAD,uBACA,SAACC,EAAD,UAAOE,EAAUK,gBACjB,SAACR,EAAD,sBACA,SAACC,EAAD,UAAOE,EAAUM,gBACjB,SAAC,EAAD,CACEjB,QAAS,WACPL,KAvBVuB,EAAAA,EAAAA,IAAaP,EAAUQ,IACpBC,MAAK,SAAAC,GACJxB,EAAewB,EAAQC,KAAKC,SAC5BzB,QAAQC,IAAIsB,EACb,IACAG,OAAM,SAAAC,GACL3B,QAAQC,IAAI0B,EACb,GAkBM,EAJH,2BAQCZ,GACCjB,EAAY8B,OAAS,IACrBC,EAAAA,EAAAA,eACE,SAACjC,EAAD,CACEC,YAAaA,EACbC,YAAaA,EACbC,eAAgBA,IAElB+B,SAASC,eAAe,cAI9B,yBAIP,C,4JC1DKC,EAAMC,gBAIL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAAA,IAAA,qCAAwCH,EAAxC,kBADR,0GAIA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,iFACQF,IAAAA,IAAA,+BACaH,EADb,iCACyCK,EADzC,YADR,0GAoBA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iFACQc,IAAAA,IAAA,gBAAmBd,EAAnB,2BAAwCW,EAAxC,oBADR,0GA3BPhC,QAAQC,IAAKgC,iBACbK,IAAAA,SAAAA,QAAyB,+B","sources":["components/BackDrop/BackDrop.style.js","components/TrailerModal/TrailerModal.style.js","components/TrailerModal/TrailerModal.js","components/movieDetails/movieDetails.style.jsx","components/movieDetails/movieDetails.jsx","service/fetch.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BackDrop = styled.div`\n  position: absolute;\n  top: 0;\n  height: 100vh;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.64);\n  z-index: 2;\n`;\n","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  background: rgba(103, 101, 113, 0.34);\n  border: 1px solid rgba(255, 255, 255, 0.14);\n  backdrop-filter: blur(10px);\n  width: 920px;\n  height: 800px;\n  transform: translate(-50%, -50%);\n  position: relative;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const Button = styled.button`\n  width: 20px;\n  height: 20px;\n  background: #64b6d0;\n  border-radius: 50px;\n`;\n","import React from 'react';\nimport { BackDrop } from 'components/BackDrop/BackDrop.style';\nimport { Modal, Button } from './TrailerModal.style';\n\nexport const TrailerModal = ({ toggleClose, TrailerData, setTrailerData }) => {\n  console.log(TrailerData);\n  return (\n    <BackDrop>\n      <Modal>\n        <Button\n          onClick={() => {\n            toggleClose();\n            setTrailerData([]);\n          }}\n        >\n          X\n        </Button>\n        <iframe\n          title=\"y\"\n          width=\"720\"\n          height=\"480\"\n          src={`https://www.youtube.com/embed/${TrailerData[0].key}`}\n        ></iframe>\n      </Modal>\n    </BackDrop>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  background-color: rgba(0, 0, 0, 0.44);\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  padding: 30px 15px 30px;\n  width: 50%;\n  height: 490px;\n`;\n\nexport const TitleFilm = styled.h2`\n  margin-bottom: 20px;\n  font-family: 'Oswald';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 60px;\n  line-height: 90px;\n`;\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n`;\nexport const StyledLink = styled(NavLink)`\n  position: relative;\n  color: #000;\n  text-decoration: none;\n  padding: 5px;\n  border-radius: 5px;\n  margin: 10px;\n  margin-top: 20px;\n  font-family: 'ABeeZee';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 28px;\n  &.active {\n    text-decoration: underline;\n  }\n`;\nexport const Text = styled.p`\n  margin-bottom: 10px;\n`;\nexport const Button = styled.button`\n  width: 193px;\n  height: 56px;\n  background: #64b6d0;\n  border-radius: 41px;\n\n  font-family: 'ABeeZee';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 21px;\n  letter-spacing: 0.04em;\n  color: #ffffff;\n  border: none;\n`;\n","import { TrailerModal } from 'components/TrailerModal/TrailerModal';\nimport { useState } from 'react';\nimport { fetchTrailer } from 'service/fetch';\nimport { createPortal } from 'react-dom';\nimport { Box, Title, Text, TitleFilm, Button } from './movieDetails.style';\n\nconst MoviesDetails = ({ movieData }) => {\n  const [isOpened, setIsOpened] = useState(false);\n\n  const toggleClose = () => {\n    setIsOpened(!isOpened);\n  };\n\n  const [TrailerData, setTrailerData] = useState([]);\n  const GetTrailer = () => {\n    fetchTrailer(movieData.id)\n      .then(resolve => {\n        setTrailerData(resolve.data.results);\n        console.log(resolve);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      {movieData ? (\n        <Box>\n          <TitleFilm>{movieData.title}</TitleFilm>\n          <Title>Overview</Title>\n          <Text>{movieData.overview}</Text>\n          <Title>Release</Title>\n          <Text>{movieData.release_date}</Text>\n          <Title>Rating</Title>\n          <Text>{movieData.vote_average}</Text>\n          <Button\n            onClick={() => {\n              toggleClose();\n              GetTrailer();\n            }}\n          >\n            Watch trailer\n          </Button>\n          {isOpened &&\n            TrailerData.length > 0 &&\n            createPortal(\n              <TrailerModal\n                toggleClose={toggleClose}\n                TrailerData={TrailerData}\n                setTrailerData={setTrailerData}\n              />,\n              document.getElementById('modal')\n            )}\n        </Box>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\nexport default MoviesDetails;\n\n/* <StyledLink to={toSiteBack}> Go back</StyledLink> */\n","import axios from 'axios';\nimport Axios from 'axios';\nconst KEY = process.env.REACT_APP_KEY;\nconsole.log( process.env.REACT_APP_KEY)\naxios.defaults.baseURL = ' https://api.themoviedb.org/3';\n\nexport async function fetchTrend() {\n  return await Axios.get(`trending/movie/day?api_key=${KEY}&language=ukr`);\n}\n\nexport async function queryFetch(query) {\n  return await Axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1`\n  );\n}\n\nexport async function fetchById(id) {\n  return await Axios.get(`movie/${id}?api_key=${KEY}&language=ukr-UKR`);\n}\n\nexport async function fetchCast(id) {\n  return await Axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`);\n}\n\nexport async function fetchReview(id) {\n  return await Axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n\nexport async function fetchTrailer(id) {\n  return await Axios.get(`movie/${id}/videos?api_key=${KEY}&language=en-US`);\n}\n"],"names":["BackDrop","styled","Modal","Button","TrailerModal","toggleClose","TrailerData","setTrailerData","console","log","onClick","title","width","height","src","key","Box","TitleFilm","Title","Text","NavLink","movieData","useState","isOpened","setIsOpened","overview","release_date","vote_average","fetchTrailer","id","then","resolve","data","results","catch","error","length","createPortal","document","getElementById","KEY","process","fetchTrend","Axios","queryFetch","query","axios"],"sourceRoot":""}