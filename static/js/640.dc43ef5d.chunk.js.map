{"version":3,"file":"static/js/640.dc43ef5d.chunk.js","mappings":"mMA8BA,UA1Be,WACb,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYN,GACTO,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASG,KAAKC,SAC1BR,EAAUI,EAASG,KAAKC,QACzB,IACAC,OAAM,SAAAC,GAAK,OAAIL,QAAQC,IAAII,EAAhB,GACf,GAAE,CAACd,KAEF,wBACGG,EAAOY,OAAS,EACfZ,EAAOa,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACE,wBAAKD,KACL,uBAAIC,MAFGlB,EADA,KAOX,uCAIP,C","sources":["components/reviews/review.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReview } from 'service/fetch';\n\nconst Review = () => {\n  const { id } = useParams();\n  const [review, setReview] = useState([]);\n  useEffect(() => {\n    fetchReview(id)\n      .then(response => {\n        console.log(response.data.results);\n        setReview(response.data.results);\n      })\n      .catch(error => console.log(error));\n  }, [id]);\n  return (\n    <ul>\n      {review.length > 0 ? (\n        review.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>No rewiews</p>\n      )}\n    </ul>\n  );\n};\nexport default Review;\n"],"names":["id","useParams","useState","review","setReview","useEffect","fetchReview","then","response","console","log","data","results","catch","error","length","map","author","content"],"sourceRoot":""}