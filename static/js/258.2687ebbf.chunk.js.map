{"version":3,"file":"static/js/258.2687ebbf.chunk.js","mappings":"6MAiDA,UA5CsB,WAAO,IAAD,IAC1B,GAAkCA,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAU,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE3CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUR,GACPS,MAAK,SAAAC,GAAQ,OAAIX,EAAaW,EAASC,KAA1B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACb,IACJ,IAAQgB,EACNlB,EADMkB,MAAOC,EACbnB,EADamB,YAAaC,EAC1BpB,EAD0BoB,SAAUC,EACpCrB,EADoCqB,aAAcC,EAClDtB,EADkDsB,aAEpD,OACE,gCACG,KACD,4BACE,SAAC,KAAD,CAAYC,GAAIjB,EAAhB,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEkB,IAAKN,EACLO,IAAG,0CAAqCN,MAE1C,UAAC,KAAD,YACE,SAAC,KAAD,UAAQD,KACR,SAAC,KAAD,wBACA,uBAAIE,KACJ,SAAC,KAAD,uBACA,uBAAIC,KACJ,SAAC,KAAD,sBACA,uBAAIC,WAGR,SAAC,KAAD,CAAYC,GAAI,OAAQhB,MAAO,CAAEC,KAAMJ,GAAvC,mBAGA,SAAC,KAAD,CAAYmB,GAAI,SAAUhB,MAAO,CAAEC,KAAMJ,GAAzC,qBAGA,SAAC,KAAD,SAIP,C,2MC9CDsB,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAAA,IAAA,qCAAwCF,IADhD,0GAIA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,iFACQF,IAAAA,IAAA,+BACaF,EADb,iCACyCI,EADzC,YADR,0GAKA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBR,GAAzB,iFACQ2B,IAAAA,IAAA,gBAAmB3B,EAAnB,oBAAiCyB,EAAjC,oBADR,0GAGA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyB9B,GAAzB,iFACQ2B,IAAAA,IAAA,gBAAmB3B,EAAnB,4BAAyCyB,EAAzC,oBADR,0GAGA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA2B/B,GAA3B,iFACQ2B,IAAAA,IAAA,gBACF3B,EADE,4BACoByB,EADpB,2BADR,0G","sources":["components/movieDetails/movieDetails.jsx","service/fetch.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { fetchById } from 'service/fetch';\nimport { Box, Poster, FilmInfo, Title, StyledLink } from './movieDetails.style';\n\nconst MoviesDetails = () => {\n  const [movieData, setMovieData] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const toSiteBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchById(id)\n      .then(response => setMovieData(response.data))\n      .catch(error => console.log(error));\n  }, [id]);\n  const { title, poster_path, overview, release_date, vote_average } =\n    movieData;\n  return (\n    <>\n      {' '}\n      <div>\n        <StyledLink to={toSiteBack}> Go back</StyledLink>\n        <Box>\n          <Poster\n            alt={title}\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          ></Poster>\n          <FilmInfo>\n            <Title>{title}</Title>\n            <Title>Overview</Title>\n            <p>{overview}</p>\n            <Title>Reliase</Title>\n            <p>{release_date}</p>\n            <Title>Rating</Title>\n            <p>{vote_average}</p>\n          </FilmInfo>\n        </Box>\n        <StyledLink to={'Cast'} state={{ from: location }}>\n          Cast\n        </StyledLink>\n        <StyledLink to={'Review'} state={{ from: location }}>\n          Review\n        </StyledLink>\n        <Outlet />\n      </div>\n    </>\n  );\n};\nexport default MoviesDetails;\n","import axios from 'axios';\nimport Axios from 'axios';\naxios.defaults.baseURL = ' https://api.themoviedb.org/3';\nconst KEY = 'deeaaa6f7bb1ec2c1571c017660b3676';\n\nexport async function fetchTrend() {\n  return await Axios.get(`trending/movie/day?api_key=${KEY}`);\n}\n\nexport async function queryFetch(query) {\n  return await Axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1`\n  );\n}\nexport async function fetchById(id) {\n  return await Axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n}\nexport async function fetchCast(id) {\n  return await Axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`);\n}\nexport async function fetchReview(id) {\n  return await Axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["useState","movieData","setMovieData","id","useParams","location","useLocation","toSiteBack","state","from","useEffect","fetchById","then","response","data","catch","error","console","log","title","poster_path","overview","release_date","vote_average","to","alt","src","axios","KEY","fetchTrend","Axios","queryFetch","query","fetchCast","fetchReview"],"sourceRoot":""}