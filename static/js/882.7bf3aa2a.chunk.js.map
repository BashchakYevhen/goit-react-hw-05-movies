{"version":3,"file":"static/js/882.7bf3aa2a.chunk.js","mappings":"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","sources":["components/cardSet/cardSet.Style.jsx","components/FlexBox/FlexBox.js","components/cardSet/cardSet.jsx","pages/movies/Movie.styled.jsx","components/Pagination/Pagination.js","pages/movies/Movies.jsx","service/fetch.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmCard = styled.li`\n  background-color: #00000059;\n  @media (min-width: 768px) {\n    display: flex;\n    width: 1200px;\n    height: 220px;\n  }\n`;\nexport const FilmImg = styled.img`\n  height: 220px;\n`;\nexport const FilmDataBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 15px;\n  width: 100%;\n  font-family: 'Oswald';\n  font-size: 18px;\n`;\nexport const OverviewText = styled.p`\n  height: 160px;\n  margin-top: 5px;\n`;\n","import styled from 'styled-components';\nimport React from 'react';\n\nexport const FlexBox = ({ children }) => {\n  return <FlexBoxStyled>{children}</FlexBoxStyled>;\n};\n\nconst FlexBoxStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { Rating } from 'react-simple-star-rating';\nimport { FilmCard, FilmDataBox, FilmImg, OverviewText } from './cardSet.Style';\nimport { FlexBox } from 'components/FlexBox/FlexBox';\nexport const CardSet = ({ film }) => {\n  const {\n    poster_path,\n    original_title,\n    title,\n    overview,\n    release_date,\n    vote_average,\n  } = film;\n\n  return (\n    <FilmCard>\n      <FilmImg\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n        alt={original_title}\n      />\n      <FilmDataBox>\n        <FlexBox>\n          {title ? <h3>{title}</h3> : <h3>{original_title}</h3>}\n          <span>{release_date}</span>\n        </FlexBox>\n        <OverviewText>{overview}</OverviewText>\n        <Rating\n          initialValue={Math.round(vote_average)}\n          iconsCount={10}\n          readonly={true}\n          size={20}\n        />\n      </FilmDataBox>\n    </FilmCard>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  @media screen and (min-width: 1400px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-direction: column;\n    max-width: 1450px;\n  }\n`;\nexport const Box = styled.div`\n  @media screen and (min-width: 1400px) {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    width: 1400px;\n    height: 100%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;\nexport const SearchForm = styled.form`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  background-color: #00000059;\n`;\nexport const Input = styled.input`\n  width: 400px;\n  height: 40px;\n  border: none;\n  border-bottom: 2px solid #00000059;\n  border-top: 2px solid #00000059;\n`;\nexport const SearchButton = styled.button`\n  border: none;\n  border-bottom: 2px solid #00000059;\n  border-top: 2px solid #00000059;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\n\nexport const SitePagination = ({ pages, handleChange, currentPage }) => {\n  return (\n    <Stack spacing={2}>\n      <Pagination\n        count={pages}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        page={currentPage}\n        onChange={(e, v) => {\n          handleChange(v);\n          console.log(e, v);\n        }}\n      />\n    </Stack>\n  );\n};\n","import { useState, useEffect } from 'react';\n// import { Link, useLocation } from 'react-router-dom';\nimport { IoSearch } from 'react-icons/io5';\nimport { CardSet } from 'components/cardSet/cardSet';\nimport { fetchPopularMovie, queryFetch } from 'service/fetch';\nimport {\n  Box,\n  Input,\n  List,\n  SearchForm,\n  SearchButton,\n} from 'pages/movies/Movie.styled';\nimport { SitePagination } from 'components/Pagination/Pagination';\n\nconst Movies = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [query, setQuery] = useState('');\n  const [queryFilms, setQueryFilms] = useState([]);\n\n  console.log(currentPage);\n\n  useEffect(() => {\n    fetchPopularMovie(currentPage)\n      .then(response => {\n        return (\n          setPagesCount(response.data.total_pages),\n          setQueryFilms(response.data.results)\n        );\n      })\n      .catch(error => console.log(error));\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    queryFetch(query, currentPage)\n      .then(response => {\n        return (\n          setPagesCount(response.data.total_pages),\n          setQueryFilms(response.data.results)\n        );\n      })\n      .catch(error => console.log(error));\n  }, [currentPage, query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCurrentPage(1);\n    const formQuery = e.currentTarget.input.value.trim();\n    setQuery(formQuery);\n  };\n\n  // const location = useLocation();.\n  return (\n    <>\n      <div style={{ height: '107px' }}></div>\n      <Box>\n        <SearchForm onSubmit={handleSubmit}>\n          <Input name=\"input\" type=\"text\" placeholder=\"Search film\" />\n          <SearchButton type=\"submit\">\n            <IoSearch />\n          </SearchButton>\n        </SearchForm>\n        {queryFilms.length !== 0 ? (\n          <List>\n            {queryFilms.map(film => {\n              return (\n                <CardSet film={film} key={film.id}>\n                  {/* <Link\n                  to={`/movies/${film.id}`}\n                  state={{ from: location }}\n                  key={film.id}\n                >\n                  {CardSet(film)}\n                </Link>  */}\n                </CardSet>\n              );\n            })}\n          </List>\n        ) : (\n          <p>No items for search</p>\n        )}\n        <SitePagination\n          pages={pagesCount}\n          handleChange={setCurrentPage}\n          currentPage={currentPage}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport Axios from 'axios';\nconst KEY = process.env.REACT_APP_KEY;\nconsole.log( process.env.REACT_APP_KEY)\naxios.defaults.baseURL = ' https://api.themoviedb.org/3';\n\nexport async function fetchTrend() {\n  return await Axios.get(`trending/movie/day?api_key=${KEY}&language=ukr`);\n}\n\nexport async function queryFetch(query, pages) {\n  return await Axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${pages}`\n  );\n}\n\nexport async function fetchById(id) {\n  return await Axios.get(`movie/${id}?api_key=${KEY}&language=ukr-UKR`);\n}\n\nexport async function fetchCast(id) {\n  return await Axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`);\n}\n\nexport async function fetchReview(id) {\n  return await Axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n\nexport async function fetchTrailer(id) {\n  return await Axios.get(`movie/${id}/videos?api_key=${KEY}&language=en-US`);\n}\n\nexport async function fetchWatchProviders(id) {\n  return await Axios.get(`movie/${id}/watch/providers?api_key=${KEY}`);\n}\n\nexport async function fetchPopularMovie(page) {\n  return await Axios.get(\n    `movie/popular?api_key=${KEY}&language=en-US&page=${page}`\n  );\n}\n"],"names":["FilmCard","styled","FilmImg","FilmDataBox","OverviewText","FlexBox","children","FlexBoxStyled","CardSet","film","poster_path","original_title","title","overview","release_date","vote_average","src","alt","initialValue","Math","round","iconsCount","readonly","size","List","Box","SearchForm","Input","SearchButton","SitePagination","pages","handleChange","currentPage","Stack","spacing","Pagination","count","variant","shape","page","onChange","e","v","console","log","useState","setCurrentPage","pagesCount","setPagesCount","query","setQuery","queryFilms","setQueryFilms","useEffect","fetchPopularMovie","then","response","data","total_pages","results","catch","error","queryFetch","style","height","onSubmit","preventDefault","formQuery","currentTarget","input","value","trim","name","type","placeholder","length","map","id","KEY","process","fetchTrend","Axios","fetchTrailer","fetchWatchProviders","axios"],"sourceRoot":""}